- id: automation0
  alias: Lights_setColorTemperatureForActiveLights
  trigger:
  - platform: state
    entity_id: input_number.light_color_temperature
  action:
  - data_template:
      entity_id: light.non_existent{% if is_state('light.bulb0', 'on') %},
        light.bulb0{% endif %}{% if is_state('light.bulb1', 'on')
        %}, light.bulb1{% endif %}{% if is_state('light.bulb2', 'on')
        %}, light.bulb2{% endif %}{% if is_state('light.bulb3', 'on') %},
        light.bulb3{% endif %}{% if is_state('light.bulb4', 'on') %}, light.bulb4{%
        endif %}
      kelvin: '{{ trigger.to_state.state | int }}'
    service: light.turn_on
- id: automation2
  alias: Lights_setColorTemperatureForActivatedLight
  trigger:
  - platform: state
    entity_id: light.bulb0
    to: 'on'
  - platform: state
    entity_id: light.bulb1
    to: 'on'
  - platform: state
    entity_id: light.bulb2
    to: 'on'
  - platform: state
    entity_id: light.bulb3
    to: 'on'
  - platform: state
    entity_id: light.bulb4
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.circadian_lighting_control
    state: 'off'
  action:
  - data_template:
      entity_id: '{{ trigger.entity_id }}'
      kelvin: '{{ states.input_number.light_color_temperature.state | int }}'
    service: light.turn_on
- id: automation1
  alias: UI_displayColorTemperature
  trigger:
  - platform: state
    entity_id: light.all
  condition:
  - condition: state
    entity_id: switch.circadian_lighting_control
    state: 'on'
  action:
  - data_template:
      entity_id: input_number.light_color_temperature
      value: '{{ states.sensor.circadian_values.attributes.colortemp | int }}'
    service: input_number.set_value
- id: '1543655336930'
  alias: MediaPlayer_turnOn
  trigger:
  - entity_id: input_boolean.media_player_on
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: media_player.mopidy
    state: 'off'
  action:
  - data:
      entity_id: media_player.mopidy
    service: media_player.turn_on
- id: '1543656635822'
  alias: MediaPlayer_turnOff
  trigger:
  - entity_id: input_boolean.media_player_on
    platform: state
    to: 'off'
  condition: []
  action:
    - data:
        entity_id: media_player.mopidy
      service: media_player.turn_off
    - data: {}
      service: shell_command.refresh_radio_buttons
- id: '1543664616446'
  alias: MediaPlayer_switchToSpotify
  trigger:
  - entity_id: input_select.audio_input
    platform: state
    to: Spotify
  condition: []
  action:
    - data:
        entity_id: media_player.mopidy
      service: media_player.media_pause
- id: '1543675263356'
  alias: MediaPlayer_switchToRadio
  trigger:
    - entity_id: input_select.audio_input
      platform: state
      to: Radio
  condition: []
  action:
    - data:
        entity_id: media_player.mopidy
      service: media_player.media_play
- id: weekday-alarm-clock
  alias: 'Weekday alarm'
  initial_state: 'true'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == ( states.input_datetime.weekday_alarm_time.attributes.timestamp ) | timestamp_custom('%H:%M', False) }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.weekday_alarm_enabled
        state: 'on'
      - condition: time
        weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.media_player_on
    - service: light.turn_on
      data:
        entity_id: light.work_room
- id: weekend-alarm-clock
  alias: 'Weekend alarm'
  initial_state: 'true'
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == ( states.input_datetime.weekend_alarm_time.attributes.timestamp ) | timestamp_custom('%H:%M', False) }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.weekend_alarm_enabled
        state: 'on'
      - condition: time
        weekday:
         - sat
         - sun
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.media_player_on
    - service: light.turn_on
      data:
        entity_id: light.work_room
