- id: 'automation0'
  alias: Lights_setColorTemperature
  trigger:
  - platform: state
    entity_id: input_number.light_color_temperature
  action:
  - data_template:
      entity_id: light.non_existent{% if is_state('light.living_room_0', 'on') %}, light.living_room_0{% endif %}{% if is_state('light.living_room_1', 'on') %}, light.living_room_1{% endif %}{% if is_state('light.kitchen_2', 'on') %}, light.kitchen_2{% endif %}{% if is_state('light.kitchen_3', 'on') %}, light.kitchen_3{% endif %}{% if is_state('light.kitchen_4', 'on') %}, light.kitchen_4{% endif %}
      kelvin: '{{ trigger.to_state.state | int }}'
    service: light.turn_on
- id: 'automation1'
  alias: UI_displayColorTemperature
  trigger:
  - platform: state
    entity_id: group.all_lights
  condition:
  - condition: state
    entity_id: switch.circadian_lighting_control
    state: 'on'
  action:
  - data_template:
      entity_id: input_number.light_color_temperature
      value: '{{ states.sensor.circadian_values.attributes.colortemp | int }}'
    service: input_number.set_value
- id: '1543655336930'
  alias: MediaPlayer_turnOn
  trigger:
  - entity_id: input_boolean.media_player_on
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: media_player.mopidy
    state: 'off'
  action:
  - data:
      entity_id: media_player.mopidy
    service: media_player.turn_on
- id: '1543656635822'
  alias: MediaPlayer_turnOff
  trigger:
  - entity_id: input_boolean.media_player_on
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: media_player.mopidy
    service: media_player.turn_off
  - data: {}
    service: shell_command.stop_spotifyd
- id: '1543664616446'
  alias: MediaPlayer_switchToSpotify
  trigger:
  - entity_id: input_select.audio_input
    platform: state
    to: Spotify
  condition: []
  action:
  - data:
      entity_id: media_player.mopidy
    service: media_player.media_pause
  - data: {}
    service: shell_command.start_spotifyd
- id: '1543675263356'
  alias: MediaPlayer_switchToRadio
  trigger:
  - entity_id: input_select.audio_input
    platform: state
    to: Radio
  condition: []
  action:
  - service: shell_command.stop_spotifyd
  - data:
      entity_id: media_player.mopidy
    service: media_player.media_play
